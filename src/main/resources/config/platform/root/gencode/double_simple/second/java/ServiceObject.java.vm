package ${second_package_name_all}.service;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;
import ${second_package_name_all}.entity.${second_table_class};
import  c.x.platform.root.common.service.BaseService;
import c.a.util.core.jdbc.bean.nut.PageCoreBean;
import c.a.util.core.string.StringUtil;
public class ${second_table_class}ServiceObject extends BaseService {
	protected Logger log = LogManager.getLogger(this.getClass());
	/**
	 * 
	 * 查找实体
	 * 
	 * @param id
	 * @return
	 * @throws Exception
	 */
	public ${second_table_class} find(String id) throws Exception {
		return (${second_table_class}) this.dao.find(${second_table_class}.class, id);
	}
	/**
	 * 
	 * 更新
	 * 
	 * @param entity
	 * @throws Exception
	 */
	public void update(${second_table_class} entity) throws Exception {
		dao.update(entity);
	}
	/**
	 * 
	 * 删除所有
	 * 
	 * @param ids
	 * @throws Exception
	 */
	public void delAll(String[] ids) throws Exception {
		StringBuilder stringBuffer = new StringBuilder();
		for (String id : ids) {
			stringBuffer.append(id).append(",");
		}
		stringBuffer.deleteCharAt(stringBuffer.length() - 1);
		String sql = "delete from ${second_table_name} where ${second_columnNamePk} in("
				+ stringBuffer.toString() + ")";
		dao.execute(sql, null);
	}
	/**
	 * 
	 * 删除
	 * 
	 * @param id
	 * @throws Exception
	 */
	public void del(String id) throws Exception {
		String sql = "delete from ${second_table_name} where ${second_columnNamePk}=?";
		List<Object> parameterList = new ArrayList<Object>();
		parameterList.add(id);
		dao.execute(sql, parameterList);
	}
	/**
	 * 
	 * 保存
	 * 
	 * @param entity
	 * @throws Exception
	 */
	public String  save(${second_table_class} entity) throws Exception {
		return dao.save(entity);
	}
	/**
	 * 
	 * 通过树菜单查询列表
	 * 
	 * 分页
	 * @param first$id
	 *            树节点id
	 * @param order
	 * @param sortFieldName
	 * @param pageNo
	 * @param pageSize
	 * @return
	 * @throws Exception
	 */
	public PageCoreBean<Map<String, Object>> find(String first$id,
			String sortOrderName, String sortFieldName, Integer pageIndex,
			Integer pageSize) throws Exception {
		String sql_count = null;
		String sql = null;
		ArrayList<Object> parameters = new ArrayList<Object>();
		if (StringUtil.isBlank(sortOrderName) || StringUtil.isBlank(sortFieldName)) {
			sql_count = "SELECT count(*) from ${second_table_name} s left JOIN ${third_table_name} t on t.${second_columnNamePk}=s.${second_columnNamePk} "
					+ "where t.${first_columnNamePk}=" + first$id + " ";
			sql = "select *,s.${second_columnNamePk} as id from ${second_table_name} s left JOIN ${third_table_name} t on t.${second_columnNamePk}=s.${second_columnNamePk} "
					+ "where t.${first_columnNamePk}=" + first$id + " order by s.UPDATE_TIME_ desc";
		} else {
			sql_count = "SELECT count(*) from ${second_table_name} s left JOIN ${third_table_name} t on t.${second_columnNamePk}=s.${second_columnNamePk} "
					+ "where t.${first_columnNamePk}=" + first$id + "";
			sql = "select *,s.${second_columnNamePk} as id from ${second_table_name} s left JOIN ${third_table_name} t on t.${second_columnNamePk}=s.${second_columnNamePk} "
					+ "where t.${first_columnNamePk}="
					+ first$id
					+ " order by s."
					+ sortFieldName + " " + sortOrderName;
		}
		PageCoreBean<Map<String, Object>> basePage = dao.page(sql,
				parameters, pageIndex.intValue(), pageSize.intValue(), sql_count);
		return basePage;
	}
	/**
	 * 
	 * 分页
	 * 
	 * @param order
	 * @param sortFieldName
	 * @param pageNo
	 * @param pageSize
	 * @return
	 * @throws Exception
	 */
	public PageCoreBean<Map<String, Object>> find(String sortFieldName,String sortOrderName, 
			Integer pageIndex, Integer pageSize) throws Exception {
		String sql_count = null;
		String sql = null;
		ArrayList<Object> parameters = new ArrayList<Object>();
		if (StringUtil.isBlank(sortOrderName)
				|| StringUtil.isBlank(sortFieldName)) {
			sql_count = "SELECT count(*) FROM ${second_table_name} ";
			sql = "SELECT * FROM ${second_table_name} order by UPDATE_TIME_ desc";
		} else {
			sql_count = "SELECT count(*) FROM ${second_table_name} ";
			sql = "SELECT * FROM ${second_table_name} order by " + sortFieldName
					+ " " + sortOrderName;
		}
		PageCoreBean<Map<String, Object>> basePage = dao.page(sql, parameters, pageIndex.intValue(), pageSize
				.intValue(), sql_count);
		return basePage;
	}
	/**
	 * 
	 * 查询所有
	 * @return
	 * @throws Exception
	 */
	public List<${second_table_class}> findAll() throws Exception {
		//String sql = "SELECT * FROM ${second_table_name} order by ${second_columnNamePk} desc";
		String sql = "SELECT * FROM ${second_table_name} order by UPDATE_TIME_  desc";
		List<${second_table_class}> list = this.dao.findObjectList(${second_table_class}.class, sql);
		return list;
	}
}
