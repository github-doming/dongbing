###  设置日志级别 ###
log4j.rootLogger=DEBUG,console_debug,file_debug,file_error,mail

### 输出到控制台 ###
log4j.appender.console_debug=org.apache.log4j.ConsoleAppender
#输出日志到控制台的方式
log4j.appender.console_debug.Target=System.out
#输出日志到控制台的格式（布局）
log4j.appender.console_debug.layout=org.apache.log4j.PatternLayout
#输出日志到控制台的输出格式
log4j.appender.console_debug.layout.ConversionPattern=[%s]%d{yyyy-MM-dd HH:mm:ss,SSS}[%p][%m][%l-%t]%n


### 输出到日志文件 ###
log4j.appender.file_debug=org.apache.log4j.DailyRollingFileAppender
#输出日志到日志文件的位置
log4j.appender.file_debug.File=log/debug.log
#输出日志是否追加内容
log4j.appender.file_debug.Append=true
#输出日志为DEBUG级别以上的日志
log4j.appender.file_debug.Threshold=DEBUG
#输出日志到日志文件的格式（布局）
log4j.appender.file_debug.layout = org.apache.log4j.PatternLayout
#输出日志到日志文件的输出格式
log4j.appender.file_debug.layout.ConversionPattern=[%s]%d{yyyy-MM-dd HH:mm:ss,SSS}[%p][%m][%l-%t]%n


### 保存异常信息到单独文件 ###
log4j.appender.file_error=org.apache.log4j.DailyRollingFileAppender
#输出日志到日志文件的位置
log4j.appender.file_error.File=log/error.log
#输出日志是否追加内容
log4j.appender.file_error.Append=true
#输出日志为DEBUG级别以上的日志
log4j.appender.file_error.Threshold=ERROR
#输出日志到日志文件的格式（布局）
log4j.appender.file_error.layout = org.apache.log4j.PatternLayout
#输出日志到日志文件的输出格式
log4j.appender.file_error.layout.ConversionPattern=[%s]%d{yyyy-MM-dd HH:mm:ss.SSS}[%p][%m][%t][%l]%n



### 错误日志发送email ###
log4j.appender.mail=org.apache.log4j.net.SMTPAppender
#日志的错误级别
log4j.appender.mail.Threshold=ERROR
#发件人
log4j.appender.mail.From=job_doming@163.com
#发送邮件的服务器
log4j.appender.mail.SMTPHost=smtp.163.com
#发送邮件的用户名
log4j.appender.mail.SMTPUsername=job_doming@163.com
#发送邮件的密码
log4j.appender.mail.SMTPPassword=job123456
#邮件的标题
log4j.appender.mail.Subject=Log4J Message
#日志邮件的接收者
log4j.appender.mail.To=job_doming@163.com
#日志PatternLayout
log4j.appender.mail.layout=org.apache.log4j.PatternLayout
#日志的格式
log4j.appender.mail.layout.ConversionPattern=[doming]%d{yyyy-MM-dd HH:mm:ss,SSS}[%p][%m][%l-%t]%n










